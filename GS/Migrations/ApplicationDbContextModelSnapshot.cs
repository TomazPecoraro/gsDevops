// <auto-generated />
using System;
using GS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace GS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GS.Models.MaterialReciclado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataColeta")
                        .HasColumnType("timestamp")
                        .HasColumnName("DataColeta");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Origem");

                    b.Property<int>("Quantidade")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Quantidade");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("MaterialReciclado");
                });

            modelBuilder.Entity("GS.Models.Parceria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Parceria");
                });

            modelBuilder.Entity("GS.Models.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("DataTransacao");

                    b.Property<int>("MaterialRecicladoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("Quantidade");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Status");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialRecicladoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Transacao");
                });

            modelBuilder.Entity("GS.Models.Treinamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp")
                        .HasColumnName("DataInicio");

                    b.Property<DateTime>("DataTransacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("DataFim");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Titulo");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Treinamento");
                });

            modelBuilder.Entity("GS.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("timestamp")
                        .HasColumnName("DataRegistro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Senha");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GS.Models.Transacao", b =>
                {
                    b.HasOne("GS.Models.MaterialReciclado", "MaterialReciclado")
                        .WithMany("Transacaos")
                        .HasForeignKey("MaterialRecicladoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GS.Models.Usuario", "Usuario")
                        .WithMany("Transacaos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialReciclado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GS.Models.Treinamento", b =>
                {
                    b.HasOne("GS.Models.Usuario", "Usuario")
                        .WithMany("Treinamentos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GS.Models.MaterialReciclado", b =>
                {
                    b.Navigation("Transacaos");
                });

            modelBuilder.Entity("GS.Models.Usuario", b =>
                {
                    b.Navigation("Transacaos");

                    b.Navigation("Treinamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
